using System;
using System.Globalization;

namespace Lessons_1
{
    internal class Types
    {
        static void Main(string[] args)
        {
            // объявление переменной - инициализация переменной (регистр имеет значение)
            //int a = 5;
            //int b;
            //b = 5;

            //bool: хранит значение true или false (логические литералы). System.Boolean

            bool alive = true;
            bool isDead = false;

            //byte: хранит целое число от 0 до 255 и занимает 1 байт. System.Byte

            byte bit1 = 1;
            byte bit2 = 102;

            //sbyte: хранит целое число от -128 до 127 и занимает 1 байт. System.SByte

            sbyte bit3 = -101;
            sbyte bit4 = 102;

            //short: хранит целое число от -32768 до 32767 и занимает 2 байта. System.Int16

            short n1 = 1;
            short n2 = 102;

            //ushort: хранит целое число от 0 до 65535 и занимает 2 байта. System.UInt16

            ushort n3 = 1;
            ushort n4 = 102;

            //int: хранит целое число от -2147483648 до 2147483647 и занимает 4 байта. System.Int32. 

            int a = 10;
            int b = 0b101;  // бинарная форма b =5
            int c = 0xFF;   // шестнадцатеричная форма c = 255

            //uint: хранит целое число от 0 до 4294967295 и занимает 4 байта. System.UInt32

            uint a1 = 10;
            uint b1 = 0b101;
            uint c1 = 0xFF;

            //long: хранит целое число от –9 223 372 036 854 775 808 до 9 223 372 036 854 775 807 и занимает 8 байт. System.Int64

            long a2 = -10;
            long b2 = 0b101;
            long c2 = 0xFF;

            //ulong: хранит целое число от 0 до 18 446 744 073 709 551 615 и занимает 8 байт. System.UInt64

            ulong a3 = 10;
            ulong b3 = 0b101;
            ulong c3 = 0xFF;

            //float: хранит число с плавающей точкой от -3.4*1038 до 3.4*1038 и занимает 4 байта. System.Single

            //double: хранит число с плавающей точкой от ±5.0*10-324 до ±1.7*10308 и занимает 8 байта. System.Double

            //decimal: хранит десятичное дробное число. Если употребляется без десятичной запятой, имеет значение от ±1.0*10-28 до ±7.9228*1028, может хранить 28 знаков после запятой и занимает 16 байт.  System.Decimal

            //char: хранит одиночный символ в кодировке Unicode и занимает 2 байта. System.Char. Этому типу соответствуют символьные литералы

            char a4 = 'A';
            char b4 = '\x5A';
            char c4 = '\u0420';

            //string: хранит набор символов Unicode.System.String. Этому типу соответствуют строковые литералы.

            string hello = "Hello";
            string word = "world";

            //object: может хранить значение любого типа данных и занимает 4 байта на 32-разрядной платформе и 8 байт на 64-разрядной платформе. System.Object

            object a5 = 22;
            object b5 = 3.14;
            object c5 = "hello code";


            //=============================================================================================================================================================
            //=============================================================================================================================================================
            //=============================================================================================================================================================
            //=============================================================================================================================================================

            int w = 4;

            int f = 10;

            int s;

            s = w + f;

            string data;
            data = Console.ReadLine();

            Console.WriteLine("hello " + data + " " + s);

            //=============================================================================================================================================================
            //=============================================================================================================================================================
            //=============================================================================================================================================================
            //=============================================================================================================================================================


            string a0 = "10";

            int b0 = 4;


            Console.WriteLine(a0 + b0);

            int c0 = Convert.ToInt32(a0);

            Console.WriteLine(c0 + b0);

            string lol = "1.9";


            // указываем разделитель
            NumberFormatInfo numberFormatInfo = new NumberFormatInfo()
            {
                NumberDecimalSeparator = ".",
            };

            //передаем его вторым параметром
            double ted = Convert.ToDouble(lol, numberFormatInfo);

            Console.WriteLine(ted);

            Console.ReadKey();


        }
    }
}
